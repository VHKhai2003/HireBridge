server:
    port: ${SERVER_PORT:8080}
spring:
    application:
        name: recruitment
    output:
        ansi:
            enabled: ALWAYS
    datasource:
        url: jdbc:postgresql://localhost:5432/recruitment
        driver-class-name: org.postgresql.Driver
        username: ${SPRING_DATASOURCE_USERNAME:postgres}
        password: ${SPRING_DATASOURCE_PASSWORD:khai1234}
    jpa:
        show-sql: false
        hibernate:
            ddl-auto: update
        properties:
            hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
    servlet:
        multipart:
            max-file-size: 5MB
            max-request-size: 10MB
    redis:
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}
    cache:
        type: redis
        redis:
            time-to-live: 3600s

jwt:
    secret_key: ${JWT_SECRET_KEY:your-secret-keykakjeoodjjdjjdnviqquhdl84220002jrjjoidoso938aunvnaoidj}
    access-expiration: ${JWT_ACCESS_EXPIRATION:3600000}
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:2592000000}

cloudinary:
    cloud-name: ${CLOUDINARY_CLOUD_NAME}
    api-key: ${CLOUDINARY_API_KEY}
    api-secret: ${CLOUDINARY_API_SECRET}